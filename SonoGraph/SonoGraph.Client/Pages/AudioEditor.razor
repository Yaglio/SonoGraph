@page "/editor"
@rendermode InteractiveWebAssembly

@inject VolumeService VolumeService

@using SonoGraph.Client.Models

<!--test header to show global volume. Header is removeable-->
<header class="pageHeader">
    <h3 class="pageTitle">Canvas</h3>
    <p>Aktuelle Lautstärke: @VolumeService.MasterVolume%</p>
    <input type="range" min="0" max="100" @bind="@VolumeService.MasterVolume" @bind:event="oninput" />
</header>

<div class="editorcontainer">
    <!-- Dein Editor-Inhalt hier -->
</div>

<div class="row">
    <div class="column">
        <h2>Column</h2>
        <p>Lorem ipsum dolor sit amet...</p>
    </div>

    <div class="column">
        <h2>Column</h2>
        <p>Lorem ipsum dolor sit amet...</p>
    </div>

    <div class="column">
        <h2>Column</h2>
        <p>Lorem ipsum dolor sit amet...</p>
    </div>
</div>

@code {
    double currentLeft = 0;

    // Methode zur Initialisierung der Audio-Instanz
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Audio audio = CreateTestAudio2();
    }

    // Methode zur Berechnung der Breite basierend auf der Dauer
    private double CalculateWidth(double duration)
    {
        return duration * 1; // Skalierungsfaktor
    }

    public static Audio CreateTestAudio2()
    {
        double baseFrequency = 440; // A4 note
        double modulationDepth = 100;
        double modulationSpeed = 0.1;

        return new Audio(WaveFormType.Sine, Enumerable
                .Range(0, 5)
                .Select(i => new Sound(
                    baseFrequency + modulationDepth * Math.Sin(i * modulationSpeed),
                    0.05,
                    baseFrequency - i * 50)) // Beispiel Frequenzmodulation
                .ToList());
    }
}
